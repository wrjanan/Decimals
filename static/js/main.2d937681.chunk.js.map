{"version":3,"sources":["constants/api-request-status.ts","utils/getWeb3.ts","context/contract-reducer.tsx","context/contract-context.tsx","service/ContractService.tsx","views/components/MintPopover.tsx","views/main/1-intro.tsx","views/main/5-about.tsx","views/main/6-technicals.tsx","views/MainApp.tsx","views/routes/RoutePaths.tsx","views/routes/RouteContainer.tsx","context/web3-reducer.tsx","context/web3-context.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ApiRequestStatus","getWeb3","Promise","resolve","reject","window","addEventListener","a","ethereum","web3","Web3","request","method","console","log","provider","providers","HttpProvider","SET_LOADING","none","SET_FAILED","SET_CONTEXT","reducer","state","action","type","status","isLoading","isFailed","contracts","payload","isSuccessful","initialState","isWeb3","web3Provider","account","getContract","fetchContract","dispatch","ContractContext","React","createContext","useContractContext","useContext","ContractContextProvider","children","useReducer","fetchingNow","useRef","fetchContractFunction","useCallback","currentProvider","eth","getAccounts","accounts","deployedNetwork","DecimalsContract","networks","abi","Contract","address","current","fetchedContracts","Provider","value","contract","index","methods","tokenURI","call","nftCount","mint","send","from","then","response","MintPopover","useState","clicked","setClicked","setIsLoading","hoverTitle","hoverContent","number","setNumber","onFinish","ContractService","mintDecimals","ref","createRef","id","Item","style","textAlign","minWidth","validateStatus","help","errorMsg","min","max","onChange","validateMintNumber","htmlType","disabled","loading","RawForm","content","title","trigger","visible","onVisibleChange","Intro","maxDecimals","setMaxDecimals","mintedDecimals","setMintedDecimals","useEffect","MAX_NFT_SUPPLY","totalSupply","getMaxDecimals","span","shape","icon","DownloadOutlined","size","About","justify","xs","md","Technicals","Main","routePaths","name","path","container","minHeight","justifyContent","backgroundColor","paddingTop","paddingBottom","isExact","RouteContainer","availableRoutes","Object","values","map","routePath","component","exact","SET_WEB3_CONTEXT","Web3s","fetchWeb3","Web3Context","Web3ContextProvider","fetchWeb3Function","fetchedWeb3","App","customHistory","createBrowserHistory","initWeb3","history","margin","overflow","href","Date","getFullYear","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2d937681.chunk.js","sourcesContent":["// eslint-disable-next-line no-shadow\r\nexport enum ApiRequestStatus {\r\n  none,\r\n  isLoading,\r\n  isFailed,\r\n  isSuccessful\r\n}\r\n","import Web3 from 'web3';\r\n\r\ninterface Window {\r\n  ethereum: any;\r\n  web3: Web3;\r\n  addEventListener: any;\r\n}\r\ndeclare const window: Window;\r\n\r\nconst getWeb3 = (): Promise<Web3> =>\r\n  new Promise((resolve, reject) => {\r\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\r\n    window.addEventListener('load', async () => {\r\n      // Modern dapp browsers...\r\n      if (window.ethereum) {\r\n        const web3 = new Web3(window.ethereum);\r\n        try {\r\n          // Request account access if needed\r\n\r\n          await window.ethereum.request({ method:'eth_requestAccounts' });\r\n          // Acccounts now exposed\r\n          resolve(web3);\r\n        } catch (error) {\r\n          reject(error);\r\n        }\r\n      }\r\n      // Legacy dapp browsers...\r\n      else if (window.web3) {\r\n        // Use Mist/MetaMask's provider.\r\n        const web3 = window.web3;\r\n        console.log('Injected web3 detected.');\r\n        resolve(web3);\r\n      }\r\n      // Fallback to localhost; use dev console port by default...\r\n      else {\r\n        const provider = new Web3.providers.HttpProvider(\r\n          'http://127.0.0.1:8545',\r\n        );\r\n        const web3 = new Web3(provider);\r\n        console.log('No web3 instance injected, using Local web3.');\r\n        resolve(web3);\r\n      }\r\n    });\r\n  });\r\n\r\nexport default getWeb3;","import { ApiRequestStatus } from \"../constants/api-request-status\";\r\nimport Web3 from 'web3';\r\nimport { provider } from \"web3-core\";\r\nimport { Contract } from \"web3-eth-contract\";\r\n\r\nexport interface ContractState {\r\n  status: ApiRequestStatus;\r\n  isWeb3: boolean;\r\n  web3Provider: provider | null;\r\n  web3: Web3 | null;\r\n  account: string | null;\r\n  contracts: DecimalsContracts;\r\n}\r\nexport type DecimalsContracts = {\r\n  DecimalsContract?: Contract,\r\n}\r\n\r\nexport interface ContractContextState {\r\n  status: ApiRequestStatus;\r\n  isWeb3: boolean;\r\n  web3Provider: provider | null;\r\n  web3: Web3 | null;\r\n  account: string | null;\r\n  contracts: DecimalsContracts;\r\n}\r\n\r\nexport const initialState: ContractState = {\r\n  contracts: {},\r\n  status: ApiRequestStatus.none,\r\n  isWeb3: false,\r\n  web3Provider: null,\r\n  web3: null,\r\n  account: null,\r\n};\r\n\r\nexport const SET_CONTRACTS = \"SET_CONTRACTS\";\r\nexport const SET_LOADING = \"SET_LOADING\";\r\nexport const SET_FAILED = \"SET_FAILED\";\r\nexport const SET_CONTEXT = \"SET_CONTEXT\";\r\n\r\nexport interface ContractActions {\r\n  type: string;\r\n  payload?: Partial<ContractState>;\r\n}\r\n\r\nexport const reducer = (state: ContractState, action: ContractActions): ContractState => {\r\n  console.log(\"reducer\", action, state);\r\n\r\n  switch (action.type) {\r\n    case SET_LOADING:\r\n      return { ...state, status: ApiRequestStatus.isLoading };\r\n    case SET_FAILED:\r\n      return { ...state, status: ApiRequestStatus.isFailed };\r\n    case SET_CONTRACTS:\r\n      console.log(\"SET_CONTRACTS\", { ...state, contracts: action.payload, status: ApiRequestStatus.isSuccessful })\r\n      return { ...state, ...action.payload, status: ApiRequestStatus.isSuccessful };\r\n    case SET_CONTEXT:\r\n      console.log(\"SET_CONTEXT\", { ...state, ...action.payload, status: ApiRequestStatus.isSuccessful })\r\n      return { ...state, ...action.payload, status: ApiRequestStatus.isSuccessful };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { PropsWithChildren, useCallback, useContext } from \"react\";\r\nimport Web3 from 'web3';\r\nimport { ApiRequestStatus } from \"../constants/api-request-status\";\r\nimport DecimalsContract from \"../contracts/Decimals.json\";\r\nimport getWeb3 from \"../utils/getWeb3\";\r\nimport { ContractActions,\r\n  ContractState,\r\n  DecimalsContracts,\r\n  reducer,\r\n  SET_CONTEXT,\r\n  SET_FAILED,\r\n  SET_LOADING } from \"./contract-reducer\";\r\nexport interface ContractContextState extends ContractState {\r\n  getContract: () => Promise<DecimalsContracts>\r\n  fetchContract: () => void\r\n  dispatch: (action: ContractActions) => void\r\n};\r\n\r\nconst initialState: ContractContextState = {\r\n  contracts: {},\r\n  status: ApiRequestStatus.none,\r\n  isWeb3: false,\r\n  web3Provider: null,\r\n  web3: null,\r\n  account: null,\r\n  getContract: (): Promise<DecimalsContracts> => {\r\n    return Promise.resolve({});\r\n  },\r\n  fetchContract: (): void => {},\r\n  dispatch: (): void => {}\r\n};\r\n\r\ninitialState.web3 = new Web3(initialState.web3Provider)\r\n\r\nconst ContractContext = React.createContext(initialState);\r\n\r\nconst useContractContext = (): ContractContextState => useContext(ContractContext);\r\n\r\nexport const ContractContextProvider = ({ children }: PropsWithChildren<unknown>):React.ReactElement => {\r\n  const [ state, dispatch ] = React.useReducer(reducer, initialState);\r\n\r\n  const fetchingNow = React.useRef(false);\r\n\r\n  const fetchContractFunction = useCallback(async () => {\r\n    try{\r\n      console.log(\"fetchContractFunction\");\r\n      const web3 = await getWeb3();\r\n      dispatch({ type: SET_CONTEXT, payload: { web3 } });\r\n      console.log(\"fetchContractFunction1\");\r\n      const web3Provider = web3.currentProvider;\r\n      const accounts = await web3.eth.getAccounts();\r\n      console.log(\"fetchContractFunction2\");\r\n      const account = accounts[0];\r\n      console.log(accounts[0]);\r\n\r\n      const deployedNetwork = DecimalsContract.networks[1631356408705];\r\n      const abi: any = DecimalsContract.abi;\r\n      const contracts:DecimalsContracts = {\r\n        DecimalsContract: new web3.eth.Contract(\r\n            abi,\r\n            deployedNetwork && deployedNetwork.address\r\n          )\r\n      }\r\n\r\n      return({\r\n        status: ApiRequestStatus.isSuccessful,\r\n        isWeb3:true,\r\n        account,\r\n        web3Provider,\r\n        web3,\r\n        contracts\r\n      })\r\n    } catch(e) {\r\n      console.log(\"error\", e);\r\n      return({...state, status: ApiRequestStatus.isFailed})\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  },[]);\r\n\r\n  const fetchContract = useCallback(async () => {\r\n    console.log(\"const DecimalsContract\", state.contracts.DecimalsContract)\r\n    if(state.contracts.DecimalsContract) {\r\n      return;\r\n    }\r\n\r\n    if (fetchingNow.current) {\r\n      return;\r\n    }\r\n    console.log(\"fetchingNow\", fetchingNow)\r\n\r\n\r\n    fetchingNow.current = true;\r\n    console.log(\"fetchingNow\", fetchingNow)\r\n    try {\r\n      dispatch({ type: SET_LOADING });\r\n\r\n      const fetchedContracts = await fetchContractFunction();\r\n      console.log(\"fetchedContracts\", fetchedContracts)\r\n      fetchingNow.current = false;\r\n      dispatch({ type: SET_CONTEXT, payload: fetchedContracts });\r\n    } catch (e) {\r\n      console.log(\"error\", e)\r\n      fetchingNow.current = false;\r\n      dispatch({ type: SET_FAILED });\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  },[]);\r\n\r\n  const getContract = useCallback(async () => {\r\n    return state.contracts;\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  },[]);\r\n  return (\r\n    <ContractContext.Provider value={{ ...state, getContract, fetchContract, dispatch }}>\r\n      {children}\r\n    </ContractContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ContractContext;\r\nexport { useContractContext };\r\n","\r\nimport { Contract } from \"web3-eth-contract\";\r\n\r\ntype ContractInput = Contract | undefined;\r\ntype AccountInput = string | null;\r\nclass ContractService {\r\n  public async getDecimalsURI(contract: ContractInput, index: number): Promise<string> {\r\n    return contract?.methods.tokenURI(index).call();\r\n  }\r\n\r\n  public async mintDecimals(contract: ContractInput,nftCount: number, account: AccountInput): Promise<void>  {\r\n    return contract?.methods.mint(nftCount).send({ from: account }).then((response: any) => {\r\n      console.log(\"successful transaction\", response);\r\n    });\r\n  }\r\n}\r\n\r\nexport default new ContractService();\r\n","import React, { ReactNode, useState } from \"react\";\r\nimport { Button, Popover, Form, InputNumber } from 'antd';\r\nimport \"./MintPopover.css\";\r\nimport { useContractContext } from \"../../context/contract-context\";\r\nimport ContractService from \"../../service/ContractService\";\r\n\r\ntype MintPopoverProps = {\r\n  children: ReactNode;\r\n}\r\n\r\nconst MintPopover: React.FC<MintPopoverProps> = ({\r\n  children,\r\n}): React.ReactElement=> {\r\n  const { account, contracts } = useContractContext();\r\n  const { DecimalsContract } = contracts;\r\n  const [clicked, setClicked] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleClickChange = (visible: boolean) => {\r\n    setClicked(visible);\r\n  };\r\n\r\n  type ValidateStatus = Parameters<typeof Form.Item>[0]['validateStatus'];\r\n\r\n  function validateMintNumber(\r\n    number: number,\r\n  ): { validateStatus: ValidateStatus; errorMsg: string | null } {\r\n    if (number < 1) {\r\n      return {\r\n        validateStatus: 'error',\r\n        errorMsg: 'Mint count has to be greater than 0',\r\n      };\r\n    } else if (number > 3) {\r\n      return {\r\n        validateStatus: 'error',\r\n        errorMsg: 'Mint count has to be less than 3',\r\n      };\r\n    }\r\n    return {\r\n      validateStatus: 'success',\r\n      errorMsg: null,\r\n    };\r\n  }\r\n\r\n  const RawForm = () => {\r\n    const [number, setNumber] = useState<{\r\n      value: number;\r\n      validateStatus?: ValidateStatus;\r\n      errorMsg?: string | null;\r\n    }>({\r\n      value: 1,\r\n    });\r\n\r\n    const onNumberChange = (value: number) => {\r\n      setNumber({\r\n        ...validateMintNumber(value),\r\n        value,\r\n      });\r\n    };\r\n\r\n    const onFinish = async () => {\r\n      const nftCount = number.value\r\n\r\n      setIsLoading(true);\r\n      await ContractService.mintDecimals(DecimalsContract, nftCount, account);\r\n      setIsLoading(false);\r\n    };\r\n    const ref = React.createRef<any>();\r\n  return (\r\n    <Form ref={ref} id=\"MintPopover\" onFinish={onFinish}>\r\n      <Form.Item\r\n        style={{textAlign:\"center\", minWidth:\"100\"}}\r\n        validateStatus={number.validateStatus}\r\n        help={number.errorMsg}\r\n        >\r\n        <InputNumber style={{textAlign:\"center\"}} min={1} max={3} value={number.value} onChange={onNumberChange} />\r\n      </Form.Item>\r\n      <Form.Item style={{textAlign: \"end\"}}>\r\n        <Button type=\"primary\" htmlType=\"submit\" disabled={isLoading} loading={isLoading}>\r\n          Mint {number.value} Decimals Now\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>);\r\n  };\r\n\r\n  const title = 'We can only mint maximum 3 per session.';\r\n  const hoverTitle = <b>{title}</b>;\r\n  const hoverContent = <div>{RawForm()}</div>;\r\n\r\n  return (\r\n    <Popover\r\n      content={hoverContent}\r\n      title={hoverTitle}\r\n      trigger={\"click\"}\r\n      visible={clicked}\r\n      onVisibleChange={handleClickChange}\r\n    >\r\n      {children}\r\n    </Popover>\r\n  );\r\n};\r\nexport default MintPopover;\r\n\r\n","import { Row, Col, Button } from \"antd\";\r\nimport MintPopover from \"../components/MintPopover\";\r\nimport \"../components/MintPopover.css\";\r\nimport Title from \"antd/lib/typography/Title\";\r\nimport { DownloadOutlined } from '@ant-design/icons';\r\nimport { useState, useEffect } from \"react\";\r\nimport { useContractContext } from \"../../context/contract-context\";\r\n\r\nconst Intro = (): React.ReactElement => {\r\n  const { contracts, fetchContract } = useContractContext();\r\n  const [ maxDecimals, setMaxDecimals ] = useState('');\r\n  const [ mintedDecimals, setMintedDecimals ] = useState('');\r\n  const contract = contracts.DecimalsContract;\r\n\r\n  useEffect(() => {\r\n    const getMaxDecimals = async() => {\r\n      if(!contract) {\r\n        await fetchContract();\r\n      }\r\n      setMaxDecimals(await contract?.methods.MAX_NFT_SUPPLY().call());\r\n      setMintedDecimals(await contract?.methods.totalSupply().call());\r\n    }\r\n    getMaxDecimals();\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [contract]);\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={24}>\r\n          <Title>\r\n            Total Minted Decimals\r\n          </Title>\r\n          <h2>\r\n            {mintedDecimals} / {maxDecimals}\r\n          </h2>\r\n          <MintPopover>\r\n            <Button type=\"primary\" shape=\"round\" icon={<DownloadOutlined />} size={\"large\"}>Mint</Button>\r\n          </MintPopover>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Intro;\r\n","import React from 'react'\r\nimport { Row, Col } from \"antd\";\r\nimport \"../components/MintPopover.css\";\r\nimport Title from \"antd/lib/typography/Title\";\r\n\r\nconst About = (): React.ReactElement => {\r\n  return (\r\n    <>\r\n      <Row justify=\"center\">\r\n        <Col xs={20} md={12}>\r\n          <Title>About</Title>\r\n          <h2>Decimals</h2>\r\n          <p>\r\n            The true real numbers\r\n          </p>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from 'react'\r\nimport { Row, Col } from \"antd\";\r\nimport \"../components/MintPopover.css\";\r\nimport Title from \"antd/lib/typography/Title\";\r\n\r\nconst Technicals = (): React.ReactElement => {\r\n  return (\r\n    <>\r\n      <Row justify=\"center\">\r\n        <Col xs={20} md={12}>\r\n          <Title>Derivatives</Title>\r\n          <h2>Derivatives</h2>\r\n          <p>\r\n          </p>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Technicals;\r\n","import React from 'react';\r\nimport '../css/App.css';\r\nimport Layout from 'antd/lib/layout/layout';\r\nimport Intro from './main/1-intro';\r\nimport About from './main/5-about';\r\nimport Technicals from './main/6-technicals';\r\nimport { Divider } from 'antd';\r\n\r\n\r\nfunction Main() {\r\n  return (\r\n    <>\r\n      <Layout style={{ minHeight: \"90vh\", textAlign: 'center', justifyContent: \"center\" }}>\r\n        <Intro />\r\n      </Layout>\r\n      <Divider></Divider>\r\n      <Layout style={{ minHeight: \"100vh\", textAlign: 'center', justifyContent: \"center\", backgroundColor:\"aquamarine\", paddingTop:\"1em\", paddingBottom:\"1em\"}}>\r\n        <About />\r\n      </Layout>\r\n      <Divider></Divider>\r\n      <Layout style={{ minHeight: \"100vh\", textAlign: 'center', justifyContent: \"center\", backgroundColor:\"darkturquoise\", paddingTop:\"1em\", paddingBottom:\"1em\" }}>\r\n        <Technicals />\r\n      </Layout>\r\n      <Divider></Divider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import Main from \"../MainApp\";\r\n\r\nexport const routePaths: { [path: string]: RoutePath } = {\r\n  \"home\": { name: \"Home\", path: \"/\", container: Main, isExact: true },\r\n};\r\n\r\nexport const defaultRouteKey = \"home\";\r\n\r\nexport type RoutePath = {\r\n  name: string;\r\n  path: string;\r\n  container: React.ComponentType<any>;\r\n  isExact?: boolean;\r\n  onSideMenu?: boolean;\r\n};\r\n","import React, { ReactElement } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { routePaths } from \"./RoutePaths\";\r\n\r\nexport const RouteContainer: React.FC = (): ReactElement => {\r\n  const availableRoutes = Object.values(routePaths);\r\n\r\n  return (\r\n    <>\r\n      <Switch>\r\n        {availableRoutes.map(routePath => {\r\n          return (\r\n            <Route key={routePath.path}\r\n              path={routePath.path} component={routePath.container} exact={routePath.isExact} />\r\n          );\r\n        })}\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n","import { ApiRequestStatus } from \"../constants/api-request-status\";\r\nimport Web3 from 'web3';\r\nimport { provider } from \"web3-core\";\r\n\r\nexport interface Web3State {\r\n  status: ApiRequestStatus;\r\n  isWeb3: boolean;\r\n  web3: Web3 | null;\r\n  web3Provider: provider;\r\n  accounts: string[] | null;\r\n  account: string | null;\r\n}\r\n\r\nexport interface Web3ContextState {\r\n  status: ApiRequestStatus;\r\n  isWeb3: boolean;\r\n  web3Provider: provider | null;\r\n  web3: Web3 | null;\r\n  account: string | null;\r\n}\r\n\r\nexport const initialState: Web3State = {\r\n  status: ApiRequestStatus.none,\r\n  isWeb3: false,\r\n  web3Provider: null,\r\n  web3: null,\r\n  accounts: null,\r\n  account: null,\r\n};\r\n\r\nexport const SET_WEB3 = \"SET_WEB3\";\r\nexport const SET_LOADING = \"SET_LOADING\";\r\nexport const SET_FAILED = \"SET_FAILED\";\r\nexport const SET_WEB3_CONTEXT = \"SET_WEB3_CONTEXT\";\r\n\r\nexport interface Web3Actions {\r\n  type: string;\r\n  payload?: Partial<Web3State>;\r\n}\r\n\r\nexport const reducer = (state: Web3State, action: Web3Actions): Web3State => {\r\n  console.log(\"reducer\", action, state);\r\n\r\n  switch (action.type) {\r\n    case SET_LOADING:\r\n      return { ...state, status: ApiRequestStatus.isLoading };\r\n    case SET_FAILED:\r\n      return { ...state, status: ApiRequestStatus.isFailed };\r\n    case SET_WEB3:\r\n      console.log(\"SET_WEB3\", { ...state, Web3s: action.payload, status: ApiRequestStatus.isSuccessful })\r\n      return { ...state, ...action.payload, status: ApiRequestStatus.isSuccessful };\r\n    case SET_WEB3_CONTEXT:\r\n      console.log(\"SET_WEB3_CONTEXT\", { ...state, ...action.payload, status: ApiRequestStatus.isSuccessful })\r\n      return { ...state, ...action.payload, status: ApiRequestStatus.isSuccessful };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { PropsWithChildren, useCallback, useContext, useEffect } from \"react\";\r\nimport { ApiRequestStatus } from \"../constants/api-request-status\";\r\nimport getWeb3 from \"../utils/getWeb3\";\r\nimport { reducer, SET_FAILED, SET_LOADING, SET_WEB3_CONTEXT, Web3State } from \"./web3-reducer\";\r\n\r\nexport interface Web3ContextState extends Web3State {\r\n  fetchWeb3: () => void\r\n};\r\n\r\nconst initialState: Web3ContextState = {\r\n  status: ApiRequestStatus.none,\r\n  isWeb3: false,\r\n  web3Provider: null,\r\n  web3: null,\r\n  accounts: null,\r\n  account: null,\r\n  fetchWeb3: (): void => {},\r\n};\r\n\r\nconst Web3Context = React.createContext(initialState);\r\n\r\nconst useWeb3Context = (): Web3ContextState => useContext(Web3Context);\r\n\r\nexport const Web3ContextProvider = ({ children }: PropsWithChildren<unknown>):React.ReactElement => {\r\n  const [ state, dispatch ] = React.useReducer(reducer, initialState);\r\n\r\n  const fetchingNow = React.useRef(false);\r\n\r\n  const fetchWeb3Function = useCallback(async () => {\r\n    try{\r\n      console.log(\"fetchContractFunction\");\r\n      const web3 = await getWeb3();\r\n      console.log(\"fetchContractFunction1\");\r\n      const web3Provider = web3.currentProvider;\r\n      const accounts = await web3.eth.getAccounts();\r\n      console.log(\"fetchContractFunction2\");\r\n      const account = accounts[0];\r\n      console.log(accounts[0]);\r\n      const payload = {\r\n        status: ApiRequestStatus.isSuccessful,\r\n        isWeb3:true,\r\n        account,\r\n        accounts,\r\n        web3Provider,\r\n        web3,\r\n      }\r\n\r\n      dispatch({ type: SET_WEB3_CONTEXT, payload })\r\n      return(payload)\r\n    } catch(e) {\r\n      console.log(\"error\", e);\r\n      return({...state, status: ApiRequestStatus.isFailed})\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  },[]);\r\n\r\n  const fetchWeb3 = useCallback(async () => {\r\n\r\n    if (fetchingNow.current) {\r\n      return;\r\n    }\r\n    console.log(\"fetchingNow\", fetchingNow)\r\n\r\n\r\n    fetchingNow.current = true;\r\n    console.log(\"fetchingNow\", fetchingNow)\r\n    try {\r\n      dispatch({ type: SET_LOADING });\r\n      const fetchedWeb3 = await fetchWeb3Function();\r\n      console.log(\"fetchedWeb3s\", fetchedWeb3)\r\n      fetchingNow.current = false;\r\n      dispatch({ type: SET_WEB3_CONTEXT, payload: fetchedWeb3 });\r\n    } catch (e) {\r\n      console.log(\"error\", e)\r\n      fetchingNow.current = false;\r\n      dispatch({ type: SET_FAILED });\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  },[]);\r\n\r\n  useEffect(() => {\r\n    fetchWeb3();\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  return (\r\n    <Web3Context.Provider value={{...state, fetchWeb3}}>\r\n      {children}\r\n    </Web3Context.Provider>\r\n  );\r\n};\r\n\r\nexport default Web3Context;\r\nexport { useWeb3Context };\r\n","import React, { useEffect } from 'react';\r\nimport './css/App.css';\r\nimport { Router } from 'react-router-dom';\r\nimport { createBrowserHistory } from \"history\";\r\nimport { RouteContainer } from './views/routes/RouteContainer';\r\nimport { ContractContextProvider, useContractContext } from './context/contract-context';\r\nimport { Layout } from 'antd';\r\nimport { Content, Footer } from 'antd/lib/layout/layout';\r\nimport { useWeb3Context, Web3ContextProvider } from './context/web3-context';\r\nimport { ApiRequestStatus } from './constants/api-request-status';\r\nimport DecimalsContract from \"./contracts/Decimals.json\";\r\n\r\nconst App: React.VFC = () => {\r\n  const { status, fetchWeb3 } = useWeb3Context();\r\n  const { fetchContract } = useContractContext();\r\n\r\n  const customHistory = createBrowserHistory();\r\n\r\n  useEffect(() => {\r\n    const initWeb3 = async () => {\r\n      if(status === ApiRequestStatus.none) {\r\n        await fetchWeb3();\r\n        await fetchContract();\r\n      }\r\n    }\r\n    initWeb3();\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <Web3ContextProvider>\r\n      <ContractContextProvider>\r\n        <Router history={customHistory}>\r\n          <Layout>\r\n            <Content style={{ margin: '48px 32px 0', overflow: 'initial' }}>\r\n              <RouteContainer></RouteContainer>\r\n            </Content>\r\n          </Layout>\r\n          <Footer style={{ textAlign: 'center' }}>\r\n            Decimals Contract: <a href={`https://etherscan.io/address/${DecimalsContract.networks[1631356408705].address}`}>{DecimalsContract.networks[1631356408705].address}</a>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            Decimals ©{new Date().getFullYear()}\r\n            </Footer>\r\n        </Router>\r\n      </ContractContextProvider>\r\n    </Web3ContextProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}